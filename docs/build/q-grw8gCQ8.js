import{C as e}from"./q-CFqz6udX.js";import{D as t}from"./q-DYdDVb3p.js";import{b as d}from"./q-DEXM_qHp.js";import{x as l,d as u,b as n}from"./q-8bdPC3mX.js";import{_auto_code as o}from"./q-DFGGe6of.js";import"./q-uemlvruI.js";const h=()=>l("div",null,null,u(t,{children:[l("h1",{"q:slot":"h"},null,"Tree View",3,null),l("div",{"q:slot":"e"},{class:"flex w-full flex-col items-center justify-center gap-2 p-4"},u(d,{class:"h-40 w-60",nodes:[{id:1,label:"Parent 1",expanded:!0,children:[{id:2,label:"Child 1.1"},{id:3,label:"Child 1.2"}]},{id:4,label:"Parent 2",children:[{id:5,label:"Child 2.1"},{id:6,label:"Child 2.2",expanded:!0,children:[{id:7,label:"Sub Child 2.2.1"},{id:8,label:"Sub Child 2.2.2"}]}]}],[n]:{class:n}},3,"Jq_0"),1,null),u(e,{"q:slot":"c",get code(){return o},language:"typescript",[n]:{"q:slot":n,code:n,language:n}},3,"Jq_1"),l("div",{"q:slot":"p"},null,[l("h1",null,{class:"flex place-content-center p-6 text-4xl font-bold"},"TreeNode",3,null),l("table",null,{class:"border-b-width border-b-primary-0"},[l("thead",null,null,l("tr",null,null,[l("th",null,null,"Property",3,null),l("th",null,null,"Type",3,null),l("th",null,null,"Description",3,null)],3,null),3,null),l("tbody",null,null,[l("tr",null,null,[l("td",null,null,l("code",null,null,"id",3,null),3,null),l("td",null,null,l("code",null,null,"any",3,null),3,null),l("td",null,null,"Unique identifier for the tree node.",3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"label",3,null),3,null),l("td",null,null,l("code",null,null,"string",3,null),3,null),l("td",null,null,"The text label displayed for the tree node.",3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"expanded",3,null),3,null),l("td",null,null,l("code",null,null,"boolean",3,null),3,null),l("td",null,null,["Determines whether the node's children are expanded (visible). Default is ",l("code",null,null,"false",3,null),"."],3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"children",3,null),3,null),l("td",null,null,l("code",null,null,"TreeNode[]",3,null),3,null),l("td",null,null,"An array of child nodes, allowing for hierarchical nesting.",3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"isToggleDisabled",3,null),3,null),l("td",null,null,l("code",null,null,"boolean",3,null),3,null),l("td",null,null,["Disables the ability to expand/collapse the node if set to"," ",l("code",null,null,"true",3,null),". Default is ",l("code",null,null,"false",3,null),"."],3,null)],3,null)],3,null)],3,null),l("h1",null,{class:"flex place-content-center border-t-width border-t-primary-0 p-6 text-4xl font-bold"},"Props",3,null),l("table",null,null,[l("thead",null,null,l("tr",null,null,[l("th",null,null,"Prop",3,null),l("th",null,null,"Type",3,null),l("th",null,null,"Description",3,null)],3,null),3,null),l("tbody",null,null,[l("tr",null,null,[l("td",null,null,l("code",null,null,"nodes",3,null),3,null),l("td",null,null,l("code",null,null,"TreeNode[]",3,null),3,null),l("td",null,null,"The array of tree nodes to be displayed.",3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"disableAll",3,null),3,null),l("td",null,null,l("code",null,null,"boolean",3,null),3,null),l("td",null,null,["Disables interaction with all nodes when set to"," ",l("code",null,null,"true",3,null),". Default is ",l("code",null,null,"false",3,null),"."],3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"toggleComponent",3,null),3,null),l("td",null,null,l("code",null,null,"Component{ node: TreeNode; isExpanded: boolean }",3,null),3,null),l("td",null,null,"Component used to render the toggle icon. Default is a simple arrow icon component.",3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"contentComponent",3,null),3,null),l("td",null,null,l("code",null,null,"Component{ node: TreeNode; isExpanded: boolean }",3,null),3,null),l("td",null,null,"Component used to render the content of each node. Default is a simple text component displaying the node's label.",3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"class",3,null),3,null),l("td",null,null,l("code",null,null,"string",3,null),3,null),l("td",null,null,["Custom CSS classes applied to the tree view container. Default is ",l("code",null,null,"undefined",3,null),"."],3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"style",3,null),3,null),l("td",null,null,l("code",null,null,"CSSProperties",3,null),3,null),l("td",null,null,["Inline styles applied to the tree view container. Default is"," ",l("code",null,null,"undefined",3,null),"."],3,null)],3,null),l("tr",null,null,[l("td",null,null,l("code",null,null,"onSelect",3,null),3,null),l("td",null,null,l("code",null,null,"QRL<(id: any) => undefined>",3,null),3,null),l("td",null,null,["Callback function triggered when a node is selected. Default is ",l("code",null,null,"undefined",3,null),"."],3,null)],3,null)],3,null)],3,null)],3,null)]},1,"Jq_2"),1,"Jq_3");export{h as s_aYW4U0zqPnk};
